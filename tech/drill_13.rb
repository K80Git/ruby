
#----------------------------------------
puts "----------------------------------------"
#----------------------------------------
=begin 
問題

任意の文字に対してn番目の文字を消し、
その消した文字を出力するメソッドを作りましょう。

呼び出し方
missing_char(string, num)

出力例：
missing_char('kitten', 1) → 'itten'
missing_char('kitten', 2) → 'ktten'
missing_char('kitten', 4) → 'kiten'

ヒント
sliceメソッドを使用しましょう。

# 配列を作成します。
array = [0,1,2,3,4,5,6]

# 配列から引数で指定した要素を slice します。
ele = array.slice(1)

# 引数で指定した要素が slice されました。
puts ele
#=> 1

# 配列はもとのままです。
puts array #=> [0,1,2,3,4,5,6]

slice!
末尾にエクスクラメーションマーク(!)のつくメソッドを破壊的メソッドといいます。これはもとの配列や文字列を変化させるメソッドです。slice!メソッドを使用することで、指定した要素を削除することができます。

array = [0,1,2,3,4,5,6]
ele = array.slice!(1)
puts ele
 # => 1

# 1が取り除かれている
puts array #=> [0,2,3,4,5,6]


=end
#----------------------------------------
puts "----------------------------------------"
#----------------------------------------

def missing_char(string, num)
  strSli = string.slice!(num-1)
  puts string
end

missing_char('kitten', 4)




#----------------------------------------
puts "----------------------------------------"
#----------------------------------------
=begin 
解説


=end
#----------------------------------------
puts "----------------------------------------"
#----------------------------------------
